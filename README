Geometry command line library.
==============================
According to the Unix way, geometry is passed between various geom commands
using Well Known Text (WKT).

Libraries
---------
JTS: http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/geom/Geometry.html
Proj4j: http://trac.osgeo.org/proj4j/
Args4J: http://args4j.kohsuke.org/

Examples:
---------

Geometry input with -g argument
>>> geom buffer -g "POINT (10 10)" -d 2

Geometry input using Standard input stream
>>> echo "POINT (10 10)" | geom buffer -d 20

Piping results of one geometry command to another
>>> geom buffer -g "POINT (10 10)" -d 2 | geom envelope

Contains
>>> echo "POINT (0 0)" | geom buffer -d 10 | geom contains -other "POINT (5 5)"
true
>>> echo "POINT (0 0)" | geom buffer -d 10 | geom contains -other "POINT (25 25)"
false

Buffer a point, get coordinates, draw coordinates to image, and open the image 
>>> echo "POINT (10 10)" | geom buffer -d 5 | geom coordinates | geom draw && open image.png

List available geometry commands:
>>> geom list
list
buffer
centroid
contains
convexHull
draw
difference
envelope
intersection

Build
-----
Geometry Commands depends on the Java Topology Suite (JTS) and Proj4 and uses Maven as a build tool.
Unfortunately, Proj4j is not in a Maven repository.  So, to build Geometry Commands you must first
checkout Proj4j, build the jar, and install it in your local Maven repository.

Checkout source code:
svn checkout http://svn.osgeo.org/metacrs/proj4j/trunk/ proj4j

Build it:
cd proj4j/src
ant

Install it:
cd proj4j/
mvn install:install-file -Dfile=build/distro/lib/proj4j-0.1.0.jar -DgroupId=org.osgeo -DartifactId=proj4j -Dversion=0.1.0 -Dpackaging=jar

Now you can build Geometry Commands using Maven:
cd /geometrycommands
mvn clean install

License
-------
Geometry Commands is open source and licensed under the MIT License.